name: Test and Build

on:
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          export PATH="$HOME/.local/bin:$PATH"

      - name: Change directory to project
        working-directory: 04_docker/src/task3_project
        run: echo "Changed directory to project"

      - name: Install dependencies
        working-directory: 04_docker/src/task3_project
        run: poetry install --with test

      - name: Run tests with coverage
        working-directory: 04_docker/src/task3_project
        run: |
          timestamp=$(date +'%Y%m%d%H%M%S')
          coverage_report="coverage_${timestamp}.txt"
          echo $coverage_report
          poetry run coverage run -m pytest
          poetry run coverage report -m > $coverage_report

      - name: Check coverage
        working-directory: 04_docker/src/task3_project
        run: |
          coverage_percent=$(poetry run coverage report | tail -n 1 | awk '{print $4}' | tr -d '%')
          if (( $(echo "$coverage_percent < 40" | bc -l) )); then
            echo "Coverage is below 40%. Coverage: $coverage_percent%"
            exit 1
          fi
          echo "Coverage is sufficient: $coverage_percent%"

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: 04_docker/src/task3_project/coverage_*.txt


  build:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          export PATH="$HOME/.local/bin:$PATH"

      - name: Change directory to project
        working-directory: 04_docker/src/task3_project
        run: echo "Changed directory to project"

      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: Artifact is a file in folder coverage-report
        run: ls coverage-report

      - name: Echo content of file (artifact) what we have
        run: cat coverage-report/coverage_*.txt

      - name: Copy artifact to docker folder
        run: cp coverage-report/coverage_*.txt 04_docker/src/task3_project

      - name: Install production dependencies
        working-directory: 04_docker/src/task3_project
        run: poetry install --no-dev

      - name: Build the Docker image
        working-directory: 04_docker/src/task3_project
        run: |
          docker build -t my_python_app .

      - name: Tag the Docker image
        working-directory: 04_docker/src/task3_project
        run: docker tag my_python_app ${{ secrets.DOCKERHUB_USERNAME }}/my_python_app:latest

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push Docker image
        working-directory: 04_docker/src/task3_project
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/my_python_app:latest